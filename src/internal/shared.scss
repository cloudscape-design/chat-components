@use "../../node_modules/@cloudscape-design/design-tokens/index.scss" as cs;

@mixin focus-highlight($gutter: 4px, $border-radius: cs.$border-radius-control-default-focus-ring) {
  position: relative;
  box-sizing: border-box;
  outline: 2px dotted transparent;
  outline-offset: calc($gutter - 1px);

  &::before {
    content: " ";
    display: block;
    position: absolute;
    box-sizing: border-box;
    inset-inline-start: calc(-1 * #{$gutter});
    inset-block-start: calc(-1 * #{$gutter});
    inline-size: calc(100% + 2 * #{$gutter});
    block-size: calc(100% + 2 * #{$gutter});
    border-radius: $border-radius;
    border: 2px solid cs.$color-border-item-focused;
  }
}

@mixin with-direction($direction) {
  &:dir(#{$direction}) {
    @content;
  }
}

// the motion mixin definition is an exception from these scoping rules
/* stylelint-disable @cloudscape-design/no-motion-outside-of-mixin, selector-combinator-disallowed-list, selector-pseudo-class-no-unknown, selector-class-pattern */
@mixin with-motion {
  @content;

  @media (prefers-reduced-motion: reduce) {
    animation: none;
    transition: none;
  }
  :global(.awsui-motion-disabled) &,
  :global(.awsui-mode-entering) & {
    animation: none;
    transition: none;
  }
}
/* stylelint-enable @cloudscape-design/no-motion-outside-of-mixin, selector-combinator-disallowed-list, selector-pseudo-class-no-unknown, selector-class-pattern */

// mixin to apply styles only when keyboard focus is needed
// requires JavaScript part from useFocusVisible hook to be applied
@mixin when-visible {
  // stylelint-disable-next-line selector-combinator-disallowed-list
  body[data-awsui-focus-visible="true"] &:focus {
    @content;
  }
}
