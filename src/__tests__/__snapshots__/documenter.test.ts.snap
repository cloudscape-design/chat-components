// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`definition for avatar matches the snapshot > avatar 1`] = `
{
  "dashCaseName": "avatar",
  "events": [],
  "functions": [],
  "name": "Avatar",
  "properties": [
    {
      "description": "Text to describe the avatar for assistive technology.
When more than one avatar is used, provide a unique label for each.
For example, "Avatar of John Doe" or "Avatar of generative AI assistant".

If \`tooltipText\` is used make sure to include it in the \`ariaLabel\`.",
      "name": "ariaLabel",
      "optional": false,
      "type": "string",
    },
    {
      "defaultValue": ""default"",
      "description": "Determines the color of the avatar.
Use \`gen-ai\` for AI assistants and \`default\` otherwise.",
      "inlineType": {
        "name": "AvatarProps.Color",
        "type": "union",
        "values": [
          "default",
          "gen-ai",
        ],
      },
      "name": "color",
      "optional": true,
      "type": "string",
    },
    {
      "defaultValue": ""user-profile"",
      "description": "Specifies the icon to be displayed as Avatar.
Use \`gen-ai\` icon for AI assistants. By default \`user-profile\` icon is used.

If you set both \`iconName\` and \`initials\`, \`initials\` will take precedence.",
      "inlineType": {
        "name": "IconProps.Name",
        "type": "union",
        "values": [
          "comes from @cloudscape-design/components",
        ],
      },
      "name": "iconName",
      "optional": true,
      "type": "string",
    },
    {
      "deprecatedTag": "Use \`iconSvg\` or \`imgUrl\` instead.",
      "description": "Specifies the URL of a custom icon. Use this property if the icon you want isn't available, and your custom icon can't be an SVG.",
      "name": "iconUrl",
      "optional": true,
      "type": "string",
    },
    {
      "description": "Specifies the URL of a custom image. If you set both \`iconUrl\` and \`imgUrl\`, \`imgUrl\` will take precedence.",
      "name": "imgUrl",
      "optional": true,
      "type": "string",
    },
    {
      "description": "The text content shown directly in the avatar's body.
Can be 1 or 2 symbols long, every subsequent symbol is ignored.
Use it to define initials that uniquely identify the avatar's owner.",
      "name": "initials",
      "optional": true,
      "type": "string",
    },
    {
      "description": "When set to true, a loading indicator is shown in avatar.",
      "name": "loading",
      "optional": true,
      "type": "boolean",
    },
    {
      "inlineType": {
        "name": "AvatarProps.Style",
        "properties": [
          {
            "inlineType": {
              "name": "object",
              "properties": [
                {
                  "name": "background",
                  "optional": true,
                  "type": "string",
                },
                {
                  "name": "borderColor",
                  "optional": true,
                  "type": "string",
                },
                {
                  "name": "borderRadius",
                  "optional": true,
                  "type": "string",
                },
                {
                  "name": "borderWidth",
                  "optional": true,
                  "type": "string",
                },
                {
                  "name": "boxShadow",
                  "optional": true,
                  "type": "string",
                },
                {
                  "name": "color",
                  "optional": true,
                  "type": "string",
                },
                {
                  "inlineType": {
                    "name": "object",
                    "properties": [
                      {
                        "name": "borderColor",
                        "optional": true,
                        "type": "string",
                      },
                      {
                        "name": "borderRadius",
                        "optional": true,
                        "type": "string",
                      },
                      {
                        "name": "borderWidth",
                        "optional": true,
                        "type": "string",
                      },
                    ],
                    "type": "object",
                  },
                  "name": "focusRing",
                  "optional": true,
                  "type": "{ borderColor?: string | undefined; borderRadius?: string | undefined; borderWidth?: string | undefined; }",
                },
              ],
              "type": "object",
            },
            "name": "root",
            "optional": true,
            "type": "{ background?: string | undefined; borderColor?: string | undefined; borderRadius?: string | undefined; borderWidth?: string | undefined; boxShadow?: string | undefined; color?: string | undefined; focusRing?: { ...; } | undefined; }",
          },
        ],
        "type": "object",
      },
      "name": "style",
      "optional": true,
      "systemTags": [
        "core",
      ],
      "type": "AvatarProps.Style",
    },
    {
      "description": "The text content shown in the avatar's tooltip.

When you use this property, make sure to include it in the \`ariaLabel\`.",
      "name": "tooltipText",
      "optional": true,
      "type": "string",
    },
    {
      "description": "Defines the width and height of the avatar.
This value corresponds to the \`width\` CSS-property and will center and crop images using \`object-fit: cover\`.
The default and minimum width value is 28px.",
      "name": "width",
      "optional": true,
      "type": "number",
    },
  ],
  "regions": [
    {
      "description": "Specifies the SVG of a custom icon.
Use this property if the icon you want isn't available.",
      "isDefault": false,
      "name": "iconSvg",
    },
  ],
  "releaseStatus": "stable",
}
`;

exports[`definition for chat-bubble matches the snapshot > chat-bubble 1`] = `
{
  "dashCaseName": "chat-bubble",
  "events": [],
  "functions": [],
  "name": "ChatBubble",
  "properties": [
    {
      "description": "Adds aria-label to the chat bubble container. Use this to provide a unique accessible name for each chat bubble on the page.
For example, "John Doe at 3:42:10am".",
      "name": "ariaLabel",
      "optional": false,
      "type": "string",
    },
    {
      "description": "Hides the avatar while preserving its space.
Useful for when there are multiple consecutive messages coming from the same author.",
      "name": "hideAvatar",
      "optional": true,
      "type": "boolean",
    },
    {
      "description": "Adds a loading bar to the bottom of the chat bubble. This property should only be used for Generative AI loading state.
If avatar is being used, set its \`loading\` state to true.",
      "name": "showLoadingBar",
      "optional": true,
      "type": "boolean",
    },
    {
      "description": "Defines the type of the chat bubble and sets its color accordingly.",
      "inlineType": {
        "name": "ChatBubbleProps.Type",
        "type": "union",
        "values": [
          "incoming",
          "outgoing",
        ],
      },
      "name": "type",
      "optional": false,
      "type": "string",
    },
  ],
  "regions": [
    {
      "description": "Actions slot of the chat bubble, placed at the footer. Use [button group](/components/button-group/).",
      "isDefault": false,
      "name": "actions",
    },
    {
      "description": "Avatar slot paired with the chat bubble content. Use [avatar](/components/avatar/).",
      "isDefault": false,
      "name": "avatar",
    },
    {
      "description": "Content of the chat bubble",
      "isDefault": true,
      "name": "children",
    },
  ],
  "releaseStatus": "stable",
}
`;

exports[`definition for loading-bar matches the snapshot > loading-bar 1`] = `
{
  "dashCaseName": "loading-bar",
  "events": [],
  "functions": [],
  "name": "LoadingBar",
  "properties": [
    {
      "description": "Specifies the variant of the loading bar. Use \`gen-ai\` to indicate an ongoing generative AI process.
Use \`gen-ai-masked\` for generative AI processes where the bar is displayed at the edge of an element
with rounded corners.",
      "inlineType": {
        "name": "LoadingBarProps.Variant",
        "type": "union",
        "values": [
          "gen-ai",
          "gen-ai-masked",
        ],
      },
      "name": "variant",
      "optional": false,
      "type": "string",
    },
  ],
  "regions": [],
  "releaseStatus": "stable",
}
`;

exports[`definition for support-prompt-group matches the snapshot > support-prompt-group 1`] = `
{
  "dashCaseName": "support-prompt-group",
  "events": [
    {
      "cancelable": false,
      "description": "Called when the user clicks on a support prompt. The event detail object contains the ID of the clicked item.",
      "detailInlineType": {
        "name": "SupportPromptGroupProps.ItemClickDetail",
        "properties": [
          {
            "name": "altKey",
            "optional": false,
            "type": "boolean",
          },
          {
            "name": "button",
            "optional": false,
            "type": "number",
          },
          {
            "name": "ctrlKey",
            "optional": false,
            "type": "boolean",
          },
          {
            "name": "id",
            "optional": false,
            "type": "string",
          },
          {
            "name": "metaKey",
            "optional": false,
            "type": "boolean",
          },
          {
            "name": "shiftKey",
            "optional": false,
            "type": "boolean",
          },
        ],
        "type": "object",
      },
      "detailType": "SupportPromptGroupProps.ItemClickDetail",
      "name": "onItemClick",
    },
  ],
  "functions": [
    {
      "description": "Focuses support prompt group item by ID.",
      "name": "focus",
      "parameters": [
        {
          "name": "itemId",
          "type": "string",
        },
      ],
      "returnType": "void",
    },
  ],
  "name": "SupportPromptGroup",
  "properties": [
    {
      "description": "Alignment of the prompts. Defaults to \`vertical\`.",
      "inlineType": {
        "name": "SupportPromptGroupProps.Alignment",
        "type": "union",
        "values": [
          "vertical",
          "horizontal",
        ],
      },
      "name": "alignment",
      "optional": true,
      "type": "string",
    },
    {
      "description": "Adds an aria label to the support prompt group.
Use this to provide a unique accessible name for each support prompt group on the page.",
      "name": "ariaLabel",
      "optional": false,
      "type": "string",
    },
    {
      "description": "An array of objects representing support prompts.
Each item has the following properties:
  - text: The text of the support prompt.
  - id: The ID of the support prompt.",
      "name": "items",
      "optional": false,
      "type": "ReadonlyArray<SupportPromptGroupProps.Item>",
    },
  ],
  "regions": [],
  "releaseStatus": "stable",
}
`;
